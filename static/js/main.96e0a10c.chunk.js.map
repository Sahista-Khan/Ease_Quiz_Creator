{"version":3,"sources":["Component/Header/Header.js","Component/CreateCheckbox/CreateCheckbox.js","Component/CreateRadio/CreateRadio.js","Component/QuestionCreator/QuestionCreator.js","Component/QuestionDisplay/QuestionDisplay.js","Container/FormBody/FormBody.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","CreateCheckbox","type","CreateRadio","name","QuestionCreator","clickToAdd","quesDetail","useState","alldropdownvalues","setalldropdownvalues","count","setcount","selectionComponent","placeholder","multiple_choice","map","quid","checkboxes","onChange","event","question","target","value","console","log","answertype","short_answer","option","disabled","style","color","onClick","length","push","QuestionDisplay","justifyContent","marginLeft","FormBody","isDoneButton","setisDoneButton","questiondetails","setquestiondetails","addNewQuestion","defaultState","preventDefault","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96e0a10c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n function Header() {\r\n    return (\r\n        <div className=\"header\">\r\n         Question Form\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nfunction CreateCheckbox() {\r\n    return (\r\n        \r\n          \r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\"  /><label>Checkbox1</label>\r\n\r\n                </div>\r\n                 \r\n         \r\n        \r\n    )\r\n}\r\n\r\nexport default CreateCheckbox\r\n","import React from 'react'\r\n\r\nfunction CreateRadio({name}) {\r\n    return (\r\n                   \r\n                <div className=\"radio\">\r\n                    <input type=\"radio\" name={name} /><label>Radio1</label>\r\n                </div>\r\n                        \r\n    )\r\n}\r\n\r\nexport default CreateRadio\r\n","import React, { useState } from 'react'\r\n\r\nimport CreateCheckbox from '../CreateCheckbox/CreateCheckbox'\r\nimport CreateRadio from '../CreateRadio/CreateRadio'\r\nimport './QuestionCreator.css'\r\n\r\nfunction QuestionCreator({ clickToAdd, quesDetail }) {\r\n    const [alldropdownvalues, setalldropdownvalues] = useState(\"short_answer\");\r\n    const [count, setcount] = useState(0)\r\n    let addallOption = null;\r\n    let onDropdownSelection = (event) => {\r\n        setalldropdownvalues(event.target.value)\r\n        quesDetail.answertype = event.target.value\r\n        if (event.target.value === \"short_answer\") {\r\n            quesDetail.short_answer = true\r\n            quesDetail.checkboxes = null\r\n            quesDetail.multiple_choice = null\r\n        }\r\n        if (event.target.value === \"multiple_choice\") {\r\n            quesDetail.short_answer = false\r\n            quesDetail.checkboxes = null\r\n            quesDetail.multiple_choice = [{ option: \"Radio\" }]\r\n        }\r\n        if (event.target.value === \"checkboxes\") {\r\n            quesDetail.short_answer = false\r\n            quesDetail.checkboxes = [{ option: \"Checkbox\" }]\r\n            quesDetail.multiple_choice = null\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let selectionComponent = null\r\n    if (alldropdownvalues === \"short_answer\") {\r\n        selectionComponent = (\r\n            <div className=\"shortanswer\">\r\n                <input type=\"text\" placeholder=\"Short answer text\" />\r\n            </div>\r\n        )\r\n\r\n    }\r\n    if (alldropdownvalues === \"multiple_choice\") {\r\n        selectionComponent = (\r\n            <div className=\"allcreatedradio\">\r\n                {\r\n                    quesDetail.multiple_choice.map(() => {\r\n                        return <CreateRadio name={quesDetail.quid} />\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    if (alldropdownvalues === \"checkboxes\") {\r\n        selectionComponent = (\r\n            <div className=\"allcreatedcheckbox\">\r\n                {quesDetail.checkboxes.map(() =>\r\n                    <CreateCheckbox />\r\n                )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const onchangeInputQuestion = (event) => {\r\n\r\n        quesDetail.question = event.target.value\r\n        console.log(quesDetail)\r\n    }\r\n\r\n    const addOptions = () => {\r\n        if (alldropdownvalues === \"multiple_choice\") {\r\n            if (quesDetail.multiple_choice.length < 5) {\r\n                quesDetail.multiple_choice.push({ option: \"Radio\" })\r\n            }\r\n\r\n\r\n        }\r\n        if (alldropdownvalues === \"checkboxes\") {\r\n            if (quesDetail.checkboxes.length<5) {\r\n                quesDetail.checkboxes.push({ option: \"Checkbox\" })\r\n            }\r\n\r\n\r\n        }\r\n\r\n        setalldropdownvalues(alldropdownvalues);\r\n        setcount(count + 1)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"QuestionCreator\">\r\n            \r\n            <div className=\"allquestion\">\r\n                <input type=\"text\" placeholder=\"Question entered\" onChange={onchangeInputQuestion} />\r\n                <select onChange={onDropdownSelection}>\r\n                    <option value=\"short_answer\"> Short Answer</option>\r\n                   <option value=\"multiple_choice\" > Multiple Choice</option>\r\n                    <option value=\"checkboxes\">Checkboxes</option>\r\n                </select>\r\n            </div>\r\n\r\n            {/* <div className=\"shortanswer\">\r\n                <input type=\"text\" placeholder=\"Short answer text\" />\r\n            </div> */}\r\n            {/* <div className=\"allcreatedcheckbox\">\r\n                <CreateCheckbox />\r\n                \r\n            </div> */}\r\n\r\n            {/* <div className=\"allcreatedradio\">\r\n                <CreateRadio />\r\n\r\n\r\n            </div> */}\r\n            {selectionComponent}\r\n\r\n            {addallOption}\r\n\r\n            <div className=\"addmore\">\r\n                {\r\n                    alldropdownvalues === \"multiple_choice\" ?\r\n                        <input type=\"radio\" disabled /> :\r\n                        alldropdownvalues === \"checkboxes\" ?\r\n                            <input type=\"checkbox\" disabled /> :\r\n                            null\r\n\r\n                }\r\n                {alldropdownvalues !== \"short_answer\" ?\r\n                    <label style={{ color: \"gray\" }} onClick={addOptions}>Add option or</label> : null\r\n\r\n                }\r\n                <label style={{ color: \"#0e7fe0\" }} onClick={clickToAdd}> add \"others\"</label>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default QuestionCreator\r\n","import React from 'react'\r\n\r\nimport CreateCheckbox from '../CreateCheckbox/CreateCheckbox'\r\nimport CreateRadio from '../CreateRadio/CreateRadio'\r\n\r\n\r\nfunction QuestionDisplay({quesDetail }) {\r\n    \r\n    \r\n    let selectionComponent = null\r\n    if (quesDetail.answertype === \"short_answer\") {\r\n        selectionComponent = (\r\n            <div className=\"shortanswer\">\r\n                <input type=\"text\" placeholder=\"Short answer text\" />\r\n            </div>\r\n        )\r\n\r\n    }\r\n    if (quesDetail.answertype === \"multiple_choice\") {\r\n        selectionComponent = (\r\n            <div className=\"allcreatedradio\">\r\n                {\r\n                    quesDetail.multiple_choice.map(() => {\r\n                        return <CreateRadio name={quesDetail.quid} />\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    if (quesDetail.answertype === \"checkboxes\") {\r\n        selectionComponent = (\r\n            <div className=\"allcreatedcheckbox\">\r\n                {quesDetail.checkboxes.map(() =>\r\n                    <CreateCheckbox />\r\n                )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"QuestionCreator\">\r\n            \r\n            <div className=\"allquestion\" style={{justifyContent:\"flex-start\", marginLeft: 20}}>\r\n                <label>{ `${quesDetail.quid}. ${quesDetail.question ?quesDetail.question : \"No Question mentioned\"}`}</label>\r\n            </div>          \r\n            {selectionComponent}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default QuestionDisplay\r\n","import React  from 'react'\r\nimport QuestionCreator from '../../Component/QuestionCreator/QuestionCreator'\r\nimport QuestionDisplay from '../../Component/QuestionDisplay/QuestionDisplay'\r\nimport './FormBody.css'\r\nimport { useState } from 'react'\r\n\r\nfunction FormBody() {\r\n     const [isDoneButton, setisDoneButton] = useState(true)\r\n    const [questiondetails, setquestiondetails] = useState([\r\n        {\r\n            quid:1,    \r\n            question:\"\",\r\n            answertype:\"short_answer\",\r\n            short_answer:true,\r\n            checkboxes:null,\r\n            multiple_choice:null\r\n        }\r\n    ])\r\n\r\n\r\n    let addNewQuestion=()=>{\r\n        //setnumberofquestion(numberofquestion+1)\r\n        let defaultState={   \r\n            quid:questiondetails.length+1,        \r\n            question:\"\",\r\n            answertype:\"short_answer\",\r\n            short_answer:true,\r\n            checkboxes:null,\r\n            multiple_choice:null\r\n        }\r\n\r\n        setquestiondetails([...questiondetails, defaultState])\r\n    }\r\n\r\n    let onDoneorEditClicked =(event)=>{\r\n        event.preventDefault()\r\n        setisDoneButton(!isDoneButton)\r\n    }\r\n    return (\r\n        <div className=\"formall\">\r\n\r\n            <form className=\"formqabody\">\r\n\r\n                <div className=\"addquestion\">\r\n                    <div className=\"formheader\">\r\n                    <input type=\"text\" className=\"forminput1\" placeholder=\"Form title\"/>\r\n                    <input type=\"text\" className=\"forminput2\" placeholder=\"Form description\"/>\r\n                    </div>\r\n                   \r\n                </div>\r\n               {/* {questionComponent} */}\r\n                {/* <QuestionCreator clickToAdd={addNewQuestion}/> */}\r\n                { isDoneButton ?\r\n                    questiondetails.map((value)=>{\r\n                        return <QuestionCreator quesDetail={value} clickToAdd={addNewQuestion}/>\r\n                    })\r\n                    :\r\n                    questiondetails.map((value)=>{\r\n                        return <QuestionDisplay quesDetail={value}/>\r\n                    })\r\n\r\n                }\r\n\r\n            <button onClick={onDoneorEditClicked} className=\"done_edit_button\">{isDoneButton ? \"DONE\" : \"EDIT\"}</button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default FormBody\r\n","import './App.css';\nimport Header from './Component/Header/Header'\nimport FormBody from './Container/FormBody/FormBody'\n\nfunction App() {\n  return (\n    <div className=\"allcomponentbody\">\n      <Header/>\n      <FormBody/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}